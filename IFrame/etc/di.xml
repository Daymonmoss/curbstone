<?xml version="1.0"?>
<config xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:framework:ObjectManager/etc/config.xsd">
    <!-- Payment Method logger configuration -->
    <type name="Curbstone\IFrame\Helper\LoggerHandler">
        <arguments>
            <argument name="filesystem" xsi:type="object">Magento\Framework\Filesystem\Driver\File</argument>
        </arguments>
    </type>
    <virtualType name="CurbstoneIFrameLogger" type="Monolog\Logger">
        <arguments>
            <argument name="name" xsi:type="string">Curbstone IFrame Stack Trace</argument>
            <argument name="handlers" xsi:type="array">
                <item name="system" xsi:type="object">Curbstone\IFrame\Helper\LoggerHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <type name="Curbstone\IFrame\Helper\CurbstoneLog">
        <arguments>
            <argument name="logger" xsi:type="object">CurbstoneIFrameLogger</argument>
        </arguments>
    </type>
    <!-- Payment Method preferences configuration -->
    <preference for="Magento\Payment\Model\InfoInterface" type="Magento\Payment\Model\Info"/>
    <preference for="Magento\Payment\Gateway\Data\OrderAdapterInterface"
                type="Magento\Payment\Gateway\Data\Order\OrderAdapter"/>
    <!-- Payment Method plugins configuration -->
    <type name="Magento\Payment\Model\Method\Adapter">
        <plugin name="curbstone_method_adapter" type="Curbstone\IFrame\Plugin\MagentoPaymentMethodAdapterInfoInstance"/>
    </type>
    <type name="Magento\Sales\Model\Order\Payment\State\CommandInterface">
        <plugin name="curbstone_order_status" type="Curbstone\IFrame\Plugin\CommandInterfacePlugin"/>
    </type>
    <!-- Payment Method adapter configuration -->
    <type name="Curbstone\IFrame\Model\Payment\CurbstoneiFrame">
        <arguments>
            <argument name="adapter" xsi:type="object">CurbstoneFacade</argument>
        </arguments>
    </type>
    <!-- Payment Method Facade configuration -->
    <virtualType name="CurbstoneFacade" type="Magento\Payment\Model\Method\Adapter">
        <arguments>
            <argument name="code" xsi:type="const">Curbstone\IFrame\Model\Ui\ConfigProvider::CODE</argument>
            <argument name="formBlockType" xsi:type="string">Magento\Payment\Block\Form</argument>
            <argument name="infoBlockType" xsi:type="string">Magento\Payment\Block\Info</argument>
            <argument name="valueHandlerPool" xsi:type="object">CurbstoneValueHandlerPool</argument>
            <argument name="validatorPool" xsi:type="object">CurbstoneValidatorPool</argument>
            <argument name="commandPool" xsi:type="object">CurbstoneCommandPool</argument>
        </arguments>
    </virtualType>
    <!-- Value Handler Pool configuration -->
    <virtualType name="CurbstoneConfig" type="Curbstone\IFrame\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Curbstone\IFrame\Model\Ui\ConfigProvider::CODE</argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneConfigValueHandler" type="Magento\Payment\Gateway\Config\ConfigValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CurbstoneConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneValueHandlerPool" type="Magento\Payment\Gateway\Config\ValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CurbstoneConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Validator Pool configuration -->
    <virtualType name="CurbstoneCountryValidator" type="Magento\Payment\Gateway\Validator\CountryValidator">
        <arguments>
            <argument name="config" xsi:type="object">CurbstoneConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneGlobalValidator" type="Magento\Payment\Gateway\Validator\ValidatorComposite">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="country" xsi:type="string">CurbstoneCountryValidator</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneValidatorPool" type="Magento\Payment\Gateway\Validator\ValidatorPool">
        <arguments>
            <argument name="validators" xsi:type="array">
                <item name="global" xsi:type="string">CurbstoneGlobalValidator</item>
                <item name="availability" xsi:type="string">Curbstone\IFrame\Gateway\Validator\AvailabilityValidator
                </item>
            </argument>
        </arguments>
    </virtualType>
    <!-- Command Pool configuration -->
    <virtualType name="CurbstoneCaptureGatewayCommand" type="Magento\Payment\Gateway\Command\GatewayCommand">
        <arguments>
            <argument name="requestBuilder" xsi:type="object">Magento\Payment\Gateway\Request\BuilderComposite
            </argument>
            <argument name="handler" xsi:type="object">Magento\Payment\Gateway\Response\HandlerChain</argument>
            <argument name="transferFactory" xsi:type="object">Magento\Payment\Gateway\Http\TransferFactoryInterface
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneCommandPool" type="Magento\Payment\Gateway\Command\CommandPool">
        <arguments>
            <argument name="commands" xsi:type="array">
                <item name="capture" xsi:type="string">CurbstoneCaptureGatewayCommand</item>
                <item name="authorize" xsi:type="string">CurbstoneCaptureGatewayCommand</item>
            </argument>
        </arguments>
    </virtualType>
    <!--  Configuration for Vault payments  -->
    <virtualType name="CurbstoneVaultPaymentConfig" type="Magento\Payment\Gateway\Config\Config">
        <arguments>
            <argument name="methodCode" xsi:type="const">Curbstone\IFrame\Model\Ui\ConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneVaultPaymentValueHandler" type="VaultPaymentDefaultValueHandler">
        <arguments>
            <argument name="configInterface" xsi:type="object">CurbstoneVaultPaymentConfig</argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneVaultPaymentValueHandlerPool" type="VaultPaymentValueHandlerPool">
        <arguments>
            <argument name="handlers" xsi:type="array">
                <item name="default" xsi:type="string">CurbstoneVaultPaymentValueHandler</item>
                <item name="can_void" xsi:type="string">Magento\Payment\Gateway\Config\ConfigValueHandler</item>
                <item name="can_cancel" xsi:type="string">Magento\Payment\Gateway\Config\ConfigValueHandler</item>
                <item name="can_authorize" xsi:type="string">Magento\Payment\Gateway\Config\ConfigValueHandler</item>
                <item name="can_capture" xsi:type="string">Magento\Payment\Gateway\Config\ConfigValueHandler</item>
            </argument>
        </arguments>
    </virtualType>
    <virtualType name="CurbstoneCreditCardVaultFacade" type="Magento\Vault\Model\Method\Vault">
        <arguments>
            <argument name="config" xsi:type="object">CurbstoneVaultPaymentConfig</argument>
            <argument name="valueHandlerPool" xsi:type="object">CurbstoneVaultPaymentValueHandlerPool</argument>
            <argument name="vaultProvider" xsi:type="object">CurbstoneFacade</argument>
            <argument name="code" xsi:type="const">Curbstone\IFrame\Model\Ui\ConfigProvider::VAULT_CODE</argument>
        </arguments>
    </virtualType>
</config>
